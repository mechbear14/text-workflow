Deep Learning Tutorials - DeepLearning 0.1 documentation

Deep Learning Tutorials
Deep Learning is a new area of Machine Learning research, which
has been introduced with the objective of moving Machine Learning
closer to one of its original goals: Artificial Intelligence.
See these course notes for a brief introduction to Machine Learning for AI
and an introduction to Deep Learning algorithms.
Deep Learning is about learning multiple levels of representation
and abstraction that help to
make sense of data such as images, sound, and text.
For more about deep learning algorithms, see for example:


The tutorials presented here will introduce you to some of the most important deep learning
algorithms and will also show you how to run them using Theano. Theano is a python library that makes writing deep learning models easy, and gives the option of
training them on a GPU.
The algorithm tutorials have some prerequisites.  You should know some python,
and be familiar with numpy. Since this tutorial is about using Theano, you
should read over the Theano basic tutorial first.  Once youve done that,
read through our Getting Started chapter  it introduces the notation, and downloadable datasets used in the algorithm tutorials, and the way we do optimization by stochastic gradient descent.
The code is available on the Deep Learning Tutorial repositories.
The purely supervised learning algorithms are meant to be read in order:


The unsupervised and semi-supervised learning algorithms can be read in any
order (the auto-encoders can be read independently of the RBM/DBN thread):


Building towards including the mcRBM model, we have a new tutorial on sampling
from energy models:


HMC Sampling - hybrid (aka Hamiltonian) Monte-Carlo sampling with scan()



Building towards including the Contractive auto-encoders tutorial, we have the code for now:


Recurrent neural networks with word embeddings and context window:


LSTM network for sentiment analysis:


Energy-based recurrent neural network (RNN-RBM):


Segmentation for medical imagery (meant to be read in order):



Note that the tutorials here are all compatible with Python 2 and 3,
with the exception of Modeling and generating sequences of polyphonic music with the RNN-RBM which is only available for Python 2, like
the tutorials in medical imagery segmentation.
If you work with conda, these command-line guidelines
may also help you run segmentation tutorials.

